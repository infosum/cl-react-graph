{"version":3,"file":"component---src-pages-scatter-tsx-ccba136d3d8ee471826d.js","mappings":"sIAGaA,E,KAAaC,QAAAA,IAAAA,WAAH,qDAAGA,CAAH,sG,iFCkGjBC,EAA8C,CAClDC,MAAO,eACPC,MAAO,CAAEC,KAAM,OAAQC,OAAQ,EAAGC,MAAM,EAAMC,OAAQ,IACtDN,KAAM,CACJ,CAAEO,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,IACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,IACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,MAGfC,EAAyB,SAAC,GAAD,IAC7BH,EAD6B,EAC7BA,EAEAE,GAH6B,EAE7BD,EAF6B,EAG7BC,GACAE,EAJ6B,EAI7BA,GACAC,EAL6B,EAK7BA,GACAC,EAN6B,EAM7BA,SAN6B,OAOzB,wBAAMN,EAAGI,EAAIH,EAAGI,EAAIE,SAAc,EAAJL,IAC9BF,MAAAA,EAAAA,EAAK,GAAK,EAAI,KAAO,KACtBM,IAgDL,UA5CqB,WACnB,OAAqBE,EAAAA,EAAAA,IAAS,OAAvBC,EAAP,KAAYC,EAAZ,KACMC,EAAc,CAClBX,EAAG,CACDY,OAAQ,GACRF,MAAOA,EACPG,MAAO,UAETZ,EAAG,CACDS,MAAO,GACPE,OAAQF,EACRG,MAAO,WAGX,OACE,gBAAC,IAAD,KACE,2CACA,gBAAC,IAAD,KACE,uBAAKJ,IAAKA,GACR,gBAAC,KAAD,CACEE,KAAMA,EACNC,OAAQ,IACRF,MAAOA,EACPjB,KAAM,CAACA,MAGX,gBAAC,IAAD,CAASqB,YA3IG,usBA6Id,gBAAC,IAAD,KACE,2BACE,2DACA,gBAAC,KAAD,CACEH,KAAMA,EACNI,eAAgB,SAACC,GAAD,OAAwB,gBAACb,EAAUa,IACnDJ,OAAQ,IACRF,MAAOA,EACPjB,KAAM,CAACA,MAEX,gBAAC,IAAD,CAASqB,YAjHS","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/scatter.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px){ \n    grid-template-columns: 1fr;\n  }\n`;\n","import React, { FC } from 'react';\n\nimport {\n  IAxes,\n  IChartPointValue,\n  IPointProps,\n  IScatterPlotDataSet,\n  ScatterPlot,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\n\nconst exampleCode = `import {\n  IAxes,\n  IChartPointValue,\n  IScatterPlotDataSet,\n  ScatterPlot,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data: IScatterPlotDataSet<IChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n    <ScatterPlot\n      axis={axis}\n      height={400}\n      width={400}\n      data={[data]}\n    />\n    </div>\n  )\n}\n`;\n\n\nconst exampleCodeCustom = `import {\n  IAxes,\n  IChartPointValue,\n  IPointProps,\n  IScatterPlotDataSet,\n  ScatterPlot,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data: IScatterPlotDataSet<IChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\n\nconst Fruit: FC<IPointProps> = ({\n  x,\n  y,\n  z,\n  cx,\n  cy,\n  children,\n}) => <text x={cx} y={cy} fontSize={z * 4}>\n    {(x ?? 0) > 2 ? \"üçé\" : \"üçê\"}\n    {children}\n  </text>\n  \nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n    <ScatterPlot\n      PointComponent={(props: IPointProps) => <Fruit {...props} />}\n      axis={axis}\n      height={400}\n      width={400}\n      data={[data]} />\n    </div>\n  )\n};\n`;\nconst data: IScatterPlotDataSet<IChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\nconst Fruit: FC<IPointProps> = ({\n  x,\n  y,\n  z,\n  cx,\n  cy,\n  children,\n}) => <text x={cx} y={cy} fontSize={z * 4}>\n    {(x ?? 0) > 2 ? \"üçé\" : \"üçê\"}\n    {children}\n  </text>\n\n\nconst RadarExample = () => {\n  const [ref, width] = useWidth('90%');\n  const axis: IAxes = {\n    x: {\n      height: 20,\n      width: width,\n      scale: 'linear',\n    },\n    y: {\n      width: 20,\n      height: width,\n      scale: 'linear',\n    },\n  }\n  return (\n    <Layout>\n      <h2>Scatter Chart</h2>\n      <TwoColumns>\n        <div ref={ref}>\n          <ScatterPlot\n            axis={axis}\n            height={400}\n            width={width}\n            data={[data]}\n          />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n      <TwoColumns>\n        <div>\n          <h3>With a custom point component</h3>\n          <ScatterPlot\n            axis={axis}\n            PointComponent={(props: IPointProps) => <Fruit {...props} />}\n            height={400}\n            width={width}\n            data={[data]} />\n          </div>\n        <JSXCode exampleCode={exampleCodeCustom} />\n      </TwoColumns>\n    </Layout>\n  )\n};\n\nexport default RadarExample;\n"],"names":["TwoColumns","styled","data","label","point","fill","radius","show","stroke","x","y","z","Fruit","cx","cy","children","fontSize","useWidth","ref","width","axis","height","scale","exampleCode","PointComponent","props"],"sourceRoot":""}