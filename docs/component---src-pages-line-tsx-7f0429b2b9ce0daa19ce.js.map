{"version":3,"file":"component---src-pages-line-tsx-7f0429b2b9ce0daa19ce.js","mappings":"uIAGaA,E,KAAaC,QAAAA,IAAAA,WAAH,qDAAGA,CAAH,sG,oGCwJvB,UArEoB,WAClB,OAAqBC,EAAAA,EAAAA,IAAS,OAAvBC,EAAP,KAAYC,EAAZ,KACMC,EAAc,CAClBC,EAAG,CACDC,WAAY,WACZC,MAAO,OACPJ,MAAOA,EACPK,OAAQ,IAEVC,EAAG,CACDC,MAAO,QACPC,aAAc,IACdJ,MAAO,MACPC,OAAQ,IACRL,MAAO,KAILS,EAAmB,CACvBC,UAAWC,EAAAA,EACXC,KAAM,CACJA,KAAMC,EAAAA,EAAAA,cACNC,MAAM,GAERA,MAAM,EACNC,OAAQF,EAAAA,EAAAA,cACRG,gBAAiB,IACjBC,iBAAkB,GAGdC,EAAM,IAAIC,KAGVC,EAFK,IAAIC,MAAM,KAAKT,KAAK,IAC5BU,KAAI,SAACC,EAAGC,GAAJ,OAAU,IAAIL,MAAK,IAAIA,MAAOM,QAAQP,EAAIQ,UAAYF,OAC7CF,KAAI,SAACK,EAAGH,GAAJ,MAAW,CAC7BtB,EAAGyB,EACHrB,EAAGkB,EAAII,KAAKC,SAAW,QAGzB,OACE,gBAAC,IAAD,KACE,wCAGA,gBAAC,IAAD,KACE,uBAAK9B,IAAKA,GACR,gBAAC,KAAD,CACEC,MAAOA,EACPK,OAAQ,IACRyB,MAAM,gBAEN,gBAAC,KAAD,CACE7B,KAAMA,EACNM,MAAM,eACNE,KAAMA,EACNT,MAAOA,EACP+B,KAAM,EACNC,SAAS,EACT3B,OAAQ,IACRe,KAAMA,MAIZ,gBAAC,IAAD,CAASa,YArIG","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/line.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px){ \n    grid-template-columns: 1fr;\n  }\n`;\n","import { curveCatmullRom } from 'd3-shape';\nimport React from 'react';\n\nimport {\n  Base,\n  IAxes,\n  ILineProps,\n  Line,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\nimport { theme } from '../context/theme';\n\nconst exampleCode = `import {\n  Base,\n  IAxes,\n  ILineProps,\n  useWidth,\n  Line,\n} from 'cl-react-graph;\nimport { curveCatmullRom } from 'd3-shape';\n\nconst axis: IAxes = {\n  x: {\n    dateFormat: '%d-%b-%y',\n    scale: 'time',\n    width: width,\n    height: 20,\n  },\n  y: {\n    label: 'Count',\n    numberFormat: 'd',\n    scale: 'log',\n    height: 200,\n    width: 20,\n  },\n};\n\nconst line: ILineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: theme.brightBlue800,\n    show: false,\n  },\n  show: true,\n  stroke: theme.brightBlue800,\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n}\n\nconst now = new Date();\nconst xs = new Array(100).fill('')\n  .map((_, i) => new Date(new Date().setDate(now.getDate() + i)));\nconst data = xs.map((v, i) => ({\n  x: v,\n  y: i * Math.random() * 1000,\n}));\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n\n  return (\n    <div ref={ref}>\n      <Base\n        width={width}\n        height={200}\n        title=\"Line example\">\n        <Line\n          axis={axis}\n          label=\"brushed data\"\n          line={line}\n          width={width}\n          left={0}\n          animate={false}\n          height={200}\n          data={data} />\n      </Base>\n    </div>\n  )\n};\n`;\n\n\n\nconst LineExample = () => {\n  const [ref, width] = useWidth('90%');\n  const axis: IAxes = {\n    x: {\n      dateFormat: '%d-%b-%y',\n      scale: 'time',\n      width: width,\n      height: 20,\n    },\n    y: {\n      label: 'Count',\n      numberFormat: 'd',\n      scale: 'log',\n      height: 200,\n      width: 20,\n    },\n  };\n\n  const line: ILineProps = {\n    curveType: curveCatmullRom,\n    fill: {\n      fill: theme.brightBlue800,\n      show: false,\n    },\n    show: true,\n    stroke: theme.brightBlue800,\n    strokeDashArray: '0',\n    strokeDashOffset: 0,\n  }\n\n  const now = new Date();\n  const xs = new Array(100).fill('')\n    .map((_, i) => new Date(new Date().setDate(now.getDate() + i)));\n  const data = xs.map((v, i) => ({\n    x: v,\n    y: i * Math.random() * 1000,\n  }));\n\n  return (\n    <Layout>\n      <h2>Line Chart</h2>\n\n\n      <TwoColumns>\n        <div ref={ref}>\n          <Base\n            width={width}\n            height={200}\n            title=\"Line example\"\n          >\n            <Line\n              axis={axis}\n              label=\"brushed data\"\n              line={line}\n              width={width}\n              left={0}\n              animate={false}\n              height={200}\n              data={data} />\n\n          </Base>\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n\n      </TwoColumns>\n    </Layout>\n  )\n};\n\nexport default LineExample;\n"],"names":["TwoColumns","styled","useWidth","ref","width","axis","x","dateFormat","scale","height","y","label","numberFormat","line","curveType","curveCatmullRom","fill","theme","show","stroke","strokeDashArray","strokeDashOffset","now","Date","data","Array","map","_","i","setDate","getDate","v","Math","random","title","left","animate","exampleCode"],"sourceRoot":""}