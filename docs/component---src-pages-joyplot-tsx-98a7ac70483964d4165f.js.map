{"version":3,"file":"component---src-pages-joyplot-tsx-98a7ac70483964d4165f.js","mappings":"uIAGaA,E,KAAaC,QAAAA,IAAAA,WAAH,qDAAGA,CAAH,sG,0FCkEjBC,EAAO,CACX,CACEC,KAAM,CACJ,UACA,aACA,eAEFC,OAAQ,CACN,CACEC,MAAO,wBACPH,KAAM,CACJ,IACA,IACA,OAINI,MAAO,MAET,CACEH,KAAM,CACJ,UACA,aACA,eAEFC,OAAQ,CACN,CACEC,MAAO,yBACPH,KAAM,CACJ,IACA,IACA,QAINI,MAAO,QA4BX,UAxBuB,WACrB,OAAqBC,EAAAA,EAAAA,IAAS,OAAvBC,EAAP,KAAYC,EAAZ,KACA,OACE,gBAAC,IAAD,KACE,qCAEA,gBAAC,IAAD,KACE,uBAAKD,IAAKA,GACR,iDACF,gBAAC,KAAD,CACEN,KAAMA,EACNI,MAAM,sBACNI,YAAa,GACbC,YAAa,CAACC,EAAAA,EAAAA,UACdH,MAAOA,EACPI,OAAsB,IAAdX,EAAKY,UAEf,gBAAC,IAAD,CAASC,YAlHG","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/joyplot.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px){ \n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport {\n  JoyPlot,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\nimport { theme } from '../context/theme';\n\nconst exampleCode = `import {\n  JoyPlot,\n  useWidth,\n} from 'cl-react-graph;\n\n\nconst data = [\n  {\n    'bins': [\n      '0, 2500',\n      '2500, 5000',\n      '5000, 10000'\n    ],\n    'counts': [\n      {\n        'label': 'in market for car: No',\n        'data': [\n          500,\n          400,\n          4000\n        ]\n      }\n    ],\n  },\n  {\n    'bins': [\n      '0, 2500',\n      '2500, 5000',\n      '5000, 10000'\n    ],\n    'counts': [\n      {\n        'label': 'in market for car: Yes',\n        'data': [\n          300,\n          300,\n          2800\n        ]\n      }\n    ],\n  }\n]\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n      <JoyPlot\n        data={data}\n        xAxisHeight={20}\n        colorScheme=\"hsla(140, 60%, 88%, 1)\"\n        width={width}\n        height={data.length * 150} />\n    </div>\n  )\n};\n`;\n\nconst data = [\n  {\n    bins: [\n      '0, 2500',\n      '2500, 5000',\n      '5000, 10000'\n    ],\n    counts: [\n      {\n        label: 'in market for car: No',\n        data: [\n          500,\n          400,\n          4000\n        ]\n      }\n    ],\n    title: 'No'\n  },\n  {\n    bins: [\n      '0, 2500',\n      '2500, 5000',\n      '5000, 10000'\n    ],\n    counts: [\n      {\n        label: 'in market for car: Yes',\n        data: [\n          300,\n          300,\n          2800\n        ]\n      }\n    ],\n    title: 'Yes'\n  }\n]\n\nconst JoyPlotExample = () => {\n  const [ref, width] = useWidth('90%');\n  return (\n    <Layout>\n      <h2>JoyPlot</h2>\n\n      <TwoColumns>\n        <div ref={ref}>\n          <h3>In market for a car</h3>\n        <JoyPlot\n          data={data}\n          title=\"In market for a car\"\n          xAxisHeight={20}\n          colorScheme={[theme.green900]}\n          width={width}\n          height={data.length * 150} />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n\n      </TwoColumns>\n    </Layout>\n  )\n};\n\nexport default JoyPlotExample;\n"],"names":["TwoColumns","styled","data","bins","counts","label","title","useWidth","ref","width","xAxisHeight","colorScheme","theme","height","length","exampleCode"],"sourceRoot":""}