{"version":3,"file":"component---src-pages-point-tsx-0cbdc18c6bb99f2916f0.js","mappings":"mIAGO,MAAMA,E,KAAaC,QAAOC,IAAG,gEAAVD,CAAU,oG,6FCqFpC,UAtCqBE,KACnB,MAAOC,EAAKC,IAASC,EAAAA,EAAAA,IAAS,OACxBC,EAAsB,CAC1B,CAAEC,GAAI,EAAGC,GAAI,EAAGC,EAAG,IACnB,CAAEF,GAAI,GAAIC,GAAI,GAAIC,EAAG,IACrB,CAAEF,GAAI,GAAIC,GAAI,GAAIC,EAAG,IACrB,CAAEF,GAAIH,EAAOI,GAAI,EAAGC,EAAG,IACvB,CAAEF,GAAIH,EAAQ,EAAGI,GAAI,IAAKC,EAAG,KAE/B,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,KAAAA,KAAI,SAEJA,EAAAA,cAACX,EAAAA,EAAU,KACTW,EAAAA,cAAAA,MAAAA,CAAKP,IAAKA,GACRO,EAAAA,cAAAA,IAAAA,KAAG,uCACHA,EAAAA,cAACE,EAAAA,GAAI,CACHR,MAAOA,EACPS,OAAQ,IACRC,MAAM,gBAEJR,EAAKS,KAAI,CAACC,EAAGC,IAAMP,EAAAA,cAACQ,EAAAA,GAAK,eACvBC,KAAMC,EAAAA,EAAMC,UACZC,IAAKL,EACLM,QAAS,GACTC,OAAQJ,EAAAA,EAAMK,SACVT,QAKZN,EAAAA,cAACgB,EAAAA,EAAO,CAACC,YApEG,uuBAuEP,C","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/point.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px){ \n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Base,\n  IPointProps,\n  Point,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\nimport { theme } from '../context/theme';\n\nconst exampleCode = `import {\n  Base,\n  IPointProps,\n  Point,\n  useWidth,\n} from 'cl-react-graph;\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  const data: IPointProps[] = [\n    { cx: 0, cy: 0, z: 10 },\n    { cx: 30, cy: 30, z: 20 },\n    { cx: 50, cy: 20, z: 30 },\n    { cx: width, cy: 0, z: 20 },\n    { cx: width / 2, cy: 100, z: 10 },\n  ];\n  return (\n    <div ref={ref}>\n      <Base\n        width={width}\n        height={200}\n        title=\"Path example\">\n        {\n          data.map((d, i) => <Point\n            fill={theme.purple900}\n            key={i}\n            opacity={0.5}\n            stroke={theme.grey400}\n            {...d} />\n          )\n        }\n      </Base>\n    </div>\n  )\n};\n`;\n\nconst PointExample = () => {\n  const [ref, width] = useWidth('90%');\n  const data: IPointProps[] = [\n    { cx: 0, cy: 0, z: 10 },\n    { cx: 30, cy: 30, z: 20 },\n    { cx: 50, cy: 20, z: 30 },\n    { cx: width, cy: 0, z: 20 },\n    { cx: width / 2, cy: 100, z: 10 },\n  ];\n  return (\n    <Layout>\n      <h2>Point</h2>\n\n      <TwoColumns>\n        <div ref={ref}>\n          <p>Renders a single or group of points</p>\n          <Base\n            width={width}\n            height={200}\n            title=\"Path example\">\n            {\n              data.map((d, i) => <Point\n                fill={theme.purple900}\n                key={i}\n                opacity={0.5}\n                stroke={theme.grey400}\n                {...d} />\n              )\n            }\n          </Base>\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n\n      </TwoColumns>\n    </Layout>\n  )\n};\n\nexport default PointExample;\n"],"names":["TwoColumns","styled","div","PointExample","ref","width","useWidth","data","cx","cy","z","React","Layout","Base","height","title","map","d","i","Point","fill","theme","purple900","key","opacity","stroke","grey400","JSXCode","exampleCode"],"sourceRoot":""}