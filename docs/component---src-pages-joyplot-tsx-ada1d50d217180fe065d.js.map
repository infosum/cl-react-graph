{"version":3,"file":"component---src-pages-joyplot-tsx-ada1d50d217180fe065d.js","mappings":"wKAwEMA,EAAO,CACX,CACE,KAAQ,CACN,UACA,aACA,eAEF,OAAU,CACR,CACE,MAAS,wBACT,KAAQ,CACN,IACA,IACA,OAIN,MAAS,MAEX,CACE,KAAQ,CACN,UACA,aACA,eAEF,OAAU,CACR,CACE,MAAS,yBACT,KAAQ,CACN,IACA,IACA,QAIN,MAAS,QA4Bb,UAxBuB,WACrB,OAAqBC,EAAAA,EAAAA,IAAS,OAAvBC,EAAP,KAAYC,EAAZ,KACA,OACE,gBAAC,IAAD,KACE,qCAEA,gBAAC,IAAD,KACE,uBAAKD,IAAKA,GACR,iDACF,gBAAC,KAAD,CACEF,KAAMA,EACNI,MAAM,sBACNC,YAAa,GACbC,YAAa,CAACC,EAAAA,EAAAA,UACdJ,MAAOA,EACPK,OAAsB,IAAdR,EAAKS,UAEf,gBAAC,IAAD,CAASC,YApHG","sources":["webpack://docs2/./src/pages/joyplot.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  Base,\n  JoyPlot,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\nimport { theme } from '../context/theme';\n\nconst exampleCode = `import {\n  Base, \n  Grid,\n} from 'cl-react-graph;\n\n\nconst data = [\n  {\n    \"bins\": [\n      \"0, 2500\",\n      \"2500, 5000\",\n      \"5000, 10000\"\n    ],\n    \"counts\": [\n      {\n        \"label\": \"in market for car: No\",\n        \"data\": [\n          500,\n          400,\n          4000\n        ]\n      }\n    ],\n    \"title\": \"No\"\n  },\n  {\n    \"bins\": [\n      \"0, 2500\",\n      \"2500, 5000\",\n      \"5000, 10000\"\n    ],\n    \"counts\": [\n      {\n        \"label\": \"in market for car: Yes\",\n        \"data\": [\n          300,\n          300,\n          2800\n        ]\n      }\n    ],\n    \"title\": \"Yes\"\n  }\n]\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n    <JoyPlot\n      data={data}\n      xAxisHeight={20}\n      colorScheme=\"hsla(140, 60%, 88%, 1)\"\n      width={width}\n      height={data.length * 150} />\n    </div>\n  )\n}\n`;\n\nconst data = [\n  {\n    \"bins\": [\n      \"0, 2500\",\n      \"2500, 5000\",\n      \"5000, 10000\"\n    ],\n    \"counts\": [\n      {\n        \"label\": \"in market for car: No\",\n        \"data\": [\n          500,\n          400,\n          4000\n        ]\n      }\n    ],\n    \"title\": \"No\"\n  },\n  {\n    \"bins\": [\n      \"0, 2500\",\n      \"2500, 5000\",\n      \"5000, 10000\"\n    ],\n    \"counts\": [\n      {\n        \"label\": \"in market for car: Yes\",\n        \"data\": [\n          300,\n          300,\n          2800\n        ]\n      }\n    ],\n    \"title\": \"Yes\"\n  }\n]\n\nconst JoyPlotExample = () => {\n  const [ref, width] = useWidth('90%');\n  return (\n    <Layout>\n      <h2>JoyPlot</h2>\n\n      <TwoColumns>\n        <div ref={ref}>\n          <h3>In market for a car</h3>\n        <JoyPlot\n          data={data}\n          title=\"In market for a car\"\n          xAxisHeight={20}\n          colorScheme={[theme.green900]}\n          width={width}\n          height={data.length * 150} />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n\n      </TwoColumns>\n    </Layout>\n  )\n}\n\nexport default JoyPlotExample;\n"],"names":["data","useWidth","ref","width","title","xAxisHeight","colorScheme","theme","height","length","exampleCode"],"sourceRoot":""}