{"version":3,"file":"component---src-pages-axis-tsx-751909d578c14e6232a7.js","mappings":"uIAGaA,E,KAAaC,QAAAA,IAAAA,WAAH,qDAAGA,CAAH,sG,iFCYjBC,EAAsB,CAC1BC,KAAM,CAAC,SAAU,OAAQ,SACzBC,OAAQ,CACN,CACEF,KAAM,CAAC,MAAO,MAAO,OACrBG,MAAO,cAsGb,UAlDoB,WAClB,OAAqBC,EAAAA,EAAAA,IAAS,OAA9B,UACA,OACE,gBAAC,IAAD,KACE,kCAEA,8GACA,mCACA,gBAAC,IAAD,KACE,gBAAC,KAAD,CACEC,MAAO,IACPC,OAAQ,IACR,gBAAC,KAAD,CACED,MAAO,IACPC,OAAQ,GACRC,IAAK,EACLC,KAAM,GACNC,iBAAkBC,EAAAA,GAAAA,WAClBC,MAAM,OACNC,OAAQZ,EAAKC,QAIjB,gBAAC,IAAD,CAASY,YArEG,4aAyEd,mCACA,gBAAC,IAAD,KACE,gBAAC,KAAD,CACER,MAAO,IACPC,OAAQ,IACR,gBAAC,KAAD,CACED,MAAO,GACPC,OAAQ,IACRC,IAAK,EACLC,KAAM,GACNC,iBAAkBC,EAAAA,GAAAA,WAClBC,MAAM,OACNC,OAAQZ,EAAKC,QAIjB,gBAAC,IAAD,CAASY,YAlEQ","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/axis.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px){ \n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport {\n  BarChart,\n  Base,\n  ELabelOrientation,\n  IBarChartData,\n  useWidth,\n  XAxis,\n  YAxis,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\n\nconst data: IBarChartData = {\n  bins: ['Female', 'Male', 'Other'],\n  counts: [\n    {\n      data: [79200, 52400, 13300],\n      label: 'Baseline',\n    },\n\n  ]\n}\n\nconst exampleCode = `import {\n  BarChart, \n} from 'cl-react-graph;\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <Base\n    width={220}\n    height={50}>\n      <XAxis\n        width={200}\n        height={20}\n        top={0}\n        left={20}\n        labelOrientation={ELabelOrientation.HORIZONTAL}\n        scale=\"band\"\n        values={['Female', 'Male', 'Other']} />\n    </Base>\n  )\n};\n`;\n\nconst exampleYAxisCode = `import {\n  BarChart, \n} from 'cl-react-graph;\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <Base\n      width={220}\n      height={50}>\n      <YAxis\n        width={20}\n        height={200}\n        top={0}\n        left={20}\n        labelOrientation={ELabelOrientation.HORIZONTAL}\n        scale=\"band\"\n        values={data.bins} />\n    </Base>\n  )\n};\n`;\n\nconst AxisExample = () => {\n  const [ref, width] = useWidth('90%');\n  return (\n    <Layout>\n      <h2>Axis</h2>\n\n      <p>An axis must be placed inside a Base component. Axis can be either XAxis or YAxis</p>\n      <h3>XAxis</h3>\n      <TwoColumns>\n        <Base\n          width={220}\n          height={50}>\n          <XAxis\n            width={200}\n            height={20}\n            top={0}\n            left={20}\n            labelOrientation={ELabelOrientation.HORIZONTAL}\n            scale=\"band\"\n            values={data.bins}\n          />\n        </Base>\n\n        <JSXCode exampleCode={exampleCode} />\n\n      </TwoColumns>\n\n      <h3>YAxis</h3>\n      <TwoColumns>\n        <Base\n          width={220}\n          height={50}>\n          <YAxis\n            width={20}\n            height={200}\n            top={0}\n            left={20}\n            labelOrientation={ELabelOrientation.HORIZONTAL}\n            scale=\"band\"\n            values={data.bins}\n          />\n        </Base>\n\n        <JSXCode exampleCode={exampleYAxisCode} />\n\n      </TwoColumns>\n    </Layout>\n  )\n};\n\nexport default AxisExample;\n"],"names":["TwoColumns","styled","data","bins","counts","label","useWidth","width","height","top","left","labelOrientation","ELabelOrientation","scale","values","exampleCode"],"sourceRoot":""}