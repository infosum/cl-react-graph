{"version":3,"file":"component---src-pages-area-fill-tsx-0be2660cb17e2acb5bbf.js","mappings":"mIAAmBA,KAAKC,IACHD,KAAKE,MACPF,KAAKG,IACLH,KAAKI,IACLJ,KAAKK,IACLL,KAAKM,IACJN,KAAKO,KAEPP,KAAKQ,GCRhB,SAASC,EAAMC,EAAMC,EAAGC,GAC7BF,EAAKG,SAASC,cAAcJ,EAAKK,IAAML,EAAKM,IAAMN,EAAKO,IAAMP,EAAKQ,KAAMR,EAAKS,IAAMT,EAAKM,IAAMN,EAAKU,IAAMV,EAAKW,KAAMX,EAAKO,IAAMP,EAAKM,IAAMN,EAAKK,IAAMJ,GAAID,EAAKU,IAAMV,EAAKM,IAAMN,EAAKS,IAAMP,GAAIF,EAAKO,IAAKP,EAAKU,IAC/M,CACO,SAASE,EAASC,EAASC,GAChCC,KAAKZ,SAAWU,EAChBE,KAAKT,IAAM,EAAIQ,GAAW,CAC5B,CACAF,EAASI,UAAY,CACnBC,UAAW,WACTF,KAAKG,MAAQ,CACf,EACAC,QAAS,WACPJ,KAAKG,MAAQE,GACf,EACAC,UAAW,WACTN,KAAKP,IAAMO,KAAKV,IAAMU,KAAKR,IAAMQ,KAAKJ,IAAMI,KAAKN,IAAMM,KAAKL,IAAMU,IAClEL,KAAKO,OAAS,CAChB,EACAC,QAAS,WACP,OAAQR,KAAKO,QACX,KAAK,EACHP,KAAKZ,SAASqB,OAAOT,KAAKR,IAAKQ,KAAKL,KACpC,MACF,KAAK,EACHX,EAAMgB,KAAMA,KAAKV,IAAKU,KAAKN,MAG3BM,KAAKG,OAAwB,IAAfH,KAAKG,OAA+B,IAAhBH,KAAKO,SAAcP,KAAKZ,SAASsB,YACvEV,KAAKG,MAAQ,EAAIH,KAAKG,KACxB,EACAnB,MAAO,SAAUE,EAAGC,GAElB,OADAD,GAAKA,EAAGC,GAAKA,EACLa,KAAKO,QACX,KAAK,EACHP,KAAKO,OAAS,EACdP,KAAKG,MAAQH,KAAKZ,SAASqB,OAAOvB,EAAGC,GAAKa,KAAKZ,SAASuB,OAAOzB,EAAGC,GAClE,MACF,KAAK,EACHa,KAAKO,OAAS,EACdP,KAAKV,IAAMJ,EAAGc,KAAKN,IAAMP,EACzB,MACF,KAAK,EACHa,KAAKO,OAAS,EAEhB,QACEvB,EAAMgB,KAAMd,EAAGC,GAGnBa,KAAKP,IAAMO,KAAKV,IAAKU,KAAKV,IAAMU,KAAKR,IAAKQ,KAAKR,IAAMN,EACrDc,KAAKJ,IAAMI,KAAKN,IAAKM,KAAKN,IAAMM,KAAKL,IAAKK,KAAKL,IAAMR,CACvD,IAEa,SAAUyB,EAAOb,GAC9B,SAASc,EAASf,GAChB,OAAO,IAAID,EAASC,EAASC,EAC/B,CAIA,OAHAc,EAASd,QAAU,SAAUA,GAC3B,OAAOa,GAAQb,EACjB,EACOc,CACR,EARD,CAQG,GCvCH,SAASC,EAAWhB,EAASiB,GAC3Bf,KAAKZ,SAAWU,EAChBE,KAAKgB,OAASD,CAChB,CACAD,EAAWb,UAAY,CACrBC,UAAW,WACTF,KAAKG,MAAQ,CACf,EACAC,QAAS,WACPJ,KAAKG,MAAQE,GACf,EACAC,UAAW,WACTN,KAAKP,IAAMO,KAAKV,IAAMU,KAAKR,IAAMQ,KAAKJ,IAAMI,KAAKN,IAAMM,KAAKL,IAAMU,IAClEL,KAAKiB,OAASjB,KAAKkB,OAASlB,KAAKmB,OAASnB,KAAKoB,QAAUpB,KAAKqB,QAAUrB,KAAKsB,QAAUtB,KAAKO,OAAS,CACvG,EACAC,QAAS,WACP,OAAQR,KAAKO,QACX,KAAK,EACHP,KAAKZ,SAASqB,OAAOT,KAAKR,IAAKQ,KAAKL,KACpC,MACF,KAAK,EACHK,KAAKhB,MAAMgB,KAAKR,IAAKQ,KAAKL,MAG1BK,KAAKG,OAAwB,IAAfH,KAAKG,OAA+B,IAAhBH,KAAKO,SAAcP,KAAKZ,SAASsB,YACvEV,KAAKG,MAAQ,EAAIH,KAAKG,KACxB,EACAnB,MAAO,SAAUE,EAAGC,GAElB,GADAD,GAAKA,EAAGC,GAAKA,EACTa,KAAKO,OAAQ,CACf,IAAIgB,EAAMvB,KAAKR,IAAMN,EACnBsC,EAAMxB,KAAKL,IAAMR,EACnBa,KAAKmB,OAAS5C,KAAKO,KAAKkB,KAAKsB,QAAU/C,KAAKkD,IAAIF,EAAMA,EAAMC,EAAMA,EAAKxB,KAAKgB,QAC9E,CACA,OAAQhB,KAAKO,QACX,KAAK,EACHP,KAAKO,OAAS,EACdP,KAAKG,MAAQH,KAAKZ,SAASqB,OAAOvB,EAAGC,GAAKa,KAAKZ,SAASuB,OAAOzB,EAAGC,GAClE,MACF,KAAK,EACHa,KAAKO,OAAS,EACd,MACF,KAAK,EACHP,KAAKO,OAAS,EAEhB,SAhEC,SAAetB,EAAMC,EAAGC,GAC7B,IAAIuC,EAAKzC,EAAKK,IACZqC,EAAK1C,EAAKS,IACVkC,EAAK3C,EAAKO,IACVqC,EAAK5C,EAAKU,IACZ,GAAIV,EAAKgC,OFAY,MEAM,CACzB,IAAIa,EAAI,EAAI7C,EAAKmC,QAAU,EAAInC,EAAKgC,OAAShC,EAAKiC,OAASjC,EAAKoC,QAC9DU,EAAI,EAAI9C,EAAKgC,QAAUhC,EAAKgC,OAAShC,EAAKiC,QAC5CQ,GAAMA,EAAKI,EAAI7C,EAAKQ,IAAMR,EAAKoC,QAAUpC,EAAKO,IAAMP,EAAKmC,SAAWW,EACpEJ,GAAMA,EAAKG,EAAI7C,EAAKW,IAAMX,EAAKoC,QAAUpC,EAAKU,IAAMV,EAAKmC,SAAWW,CACtE,CACA,GAAI9C,EAAKkC,OFNY,MEMM,CACzB,IAAIa,EAAI,EAAI/C,EAAKqC,QAAU,EAAIrC,EAAKkC,OAASlC,EAAKiC,OAASjC,EAAKoC,QAC9DY,EAAI,EAAIhD,EAAKkC,QAAUlC,EAAKkC,OAASlC,EAAKiC,QAC5CU,GAAMA,EAAKI,EAAI/C,EAAKK,IAAML,EAAKqC,QAAUpC,EAAID,EAAKoC,SAAWY,EAC7DJ,GAAMA,EAAKG,EAAI/C,EAAKS,IAAMT,EAAKqC,QAAUnC,EAAIF,EAAKoC,SAAWY,CAC/D,CACAhD,EAAKG,SAASC,cAAcqC,EAAIC,EAAIC,EAAIC,EAAI5C,EAAKO,IAAKP,EAAKU,IAC7D,CA+CQ,CAAMK,KAAMd,EAAGC,GAGnBa,KAAKiB,OAASjB,KAAKkB,OAAQlB,KAAKkB,OAASlB,KAAKmB,OAC9CnB,KAAKoB,QAAUpB,KAAKqB,QAASrB,KAAKqB,QAAUrB,KAAKsB,QACjDtB,KAAKP,IAAMO,KAAKV,IAAKU,KAAKV,IAAMU,KAAKR,IAAKQ,KAAKR,IAAMN,EACrDc,KAAKJ,IAAMI,KAAKN,IAAKM,KAAKN,IAAMM,KAAKL,IAAKK,KAAKL,IAAMR,CACvD,GAEF,MAAe,SAAUyB,EAAOG,GAC9B,SAASmB,EAAWpC,GAClB,OAAOiB,EAAQ,IAAID,EAAWhB,EAASiB,GAAS,IAAIlB,EAASC,EAAS,EACxE,CAIA,OAHAoC,EAAWnB,MAAQ,SAAUA,GAC3B,OAAOH,GAAQG,EACjB,EACOmB,CACR,CARD,CAQG,G,uDCjFI,MAAMC,E,KAAaC,QAAOC,IAAG,gEAAVD,CAAU,oG,uGCYpC,MA+FME,EAAO,CACX,CAAEpD,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,IACZ,CAAED,EAAG,GAAIC,EAAG,KAERoD,EAAkB,CACtBC,UAAWC,EAAAA,EACXC,KAAM,CACJA,KAAMC,EAAAA,EAAMC,cACZC,MAAM,GAERA,MAAM,EACNC,OAAQ,OACRC,gBAAiB,IACjBC,iBAAkB,GA2DpB,UAxDwBC,KACtB,MAAOC,EAAKC,IAASC,EAAAA,EAAAA,IAAS,OAC9B,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,KAAAA,KAAI,aACJA,EAAAA,cAAClB,EAAAA,EAAU,KACTkB,EAAAA,cAAAA,MAAAA,CAAKH,IAAKA,GACRG,EAAAA,cAACE,EAAAA,GAAI,CAACJ,MAAOA,EAAOK,OAAQ,KAC1BH,EAAAA,cAACI,EAAAA,GAAQ,CACPC,KAAMA,EAAAA,GACNC,MAAM,YACNR,MAAOA,EACPS,KAAM,EACNJ,OAAQ,IACRjB,KAAMA,EACND,KAAMA,KAIVe,EAAAA,cAAAA,KAAAA,KAAI,aACJA,EAAAA,cAAAA,IAAAA,KAAG,oDACHA,EAAAA,cAACE,EAAAA,GAAI,CAACJ,MAAOA,EAAOK,OAAQ,KAC1BH,EAAAA,cAACI,EAAAA,GAAQ,CACPC,KAAMA,EAAAA,GACNC,MAAM,YACNR,MAAOA,EACPS,KAAM,EACNJ,OAAQ,IACRjB,KAAM,IACDA,EACHG,KAAM,CACJA,KAAM,CACJmB,kBAAmB,aACnBC,MAAO,CACL,CAAEC,OAAQ,KAAMC,UAAWrB,EAAAA,EAAMsB,eACjC,CACEF,OAAQ,MACRC,UAAWrB,EAAAA,EAAMuB,cACjBC,YAAa,KAInBtB,MAAM,IAGVP,KAAMA,KAGVe,EAAAA,cAACe,EAAAA,EAAO,CAACC,YAxFE,oaA0FbhB,EAAAA,cAACe,EAAAA,EAAO,CAACC,YAnKG,mtCAqKP,C","sources":["webpack://docs2/./node_modules/d3-shape/src/math.js","webpack://docs2/./node_modules/d3-shape/src/curve/cardinal.js","webpack://docs2/./node_modules/d3-shape/src/curve/catmullRom.js","webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/area-fill.tsx"],"sourcesContent":["export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}","export function point(that, x, y) {\n  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);\n}\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinal.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n        break;\n      case 3:\n        point(this, this._x1, this._y1);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        this._x1 = x, this._y1 = y;\n        break;\n      case 2:\n        this._point = 3;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n  return cardinal;\n})(0);","import { epsilon } from \"../math.js\";\nimport { Cardinal } from \"./cardinal.js\";\nexport function point(that, x, y) {\n  var x1 = that._x1,\n    y1 = that._y1,\n    x2 = that._x2,\n    y2 = that._y2;\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n      n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n      m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\nCatmullRom.prototype = {\n  areaStart: function () {\n    this._line = 0;\n  },\n  areaEnd: function () {\n    this._line = NaN;\n  },\n  lineStart: function () {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function () {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n        break;\n      case 3:\n        this.point(this._x2, this._y2);\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function (x, y) {\n    x = +x, y = +y;\n    if (this._point) {\n      var x23 = this._x2 - x,\n        y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n      // falls through\n      default:\n        point(this, x, y);\n        break;\n    }\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n  return catmullRom;\n})(0.5);","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import { curveCatmullRom } from \"d3-shape\";\nimport React from \"react\";\n\nimport {\n  AreaFill,\n  Base,\n  defaultAxis as axis,\n  LineProps,\n  useWidth,\n} from \"../../../src\";\nimport { JSXCode } from \"../components/JSXCode\";\nimport { Layout } from \"../components/Layout\";\nimport { TwoColumns } from \"../components/TwoColumns\";\nimport { theme } from \"../context/theme\";\n\nconst exampleCode = `import {\n  AreaFill,\n  Base,\n  defaultAxis as axis,\n  LineProps,\n  useWidth,\n  Axis,\n} from 'cl-react-graph;\nimport { curveCatmullRom } from 'd3-shape';\n\nconst axis: Axes = {\n  x: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'linear',\n    tickSize: 0,\n    width: 50,\n  },\n  y: {\n    dateFormat: '',\n    height: 20,\n    label: '',\n    margin: 20,\n    numberFormat: '',\n    scale: 'linear',\n    tickSize: 20,\n    width: 50,\n  },\n};\n\nconst data = [\n  { x: 0, y: 0 },\n  { x: 10, y: 20 },\n  { x: 20, y: 10 },\n  { x: 30, y: 60 },\n]\n\nconst line: LineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: 'hsla(208, 69%, 66%, 1)',\n    show: true,\n  },\n  show: true,\n  stroke: '#000',\n  strokeDashArray: '0',\n  strokeDashOffset: 0,\n}\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n      <Base\n        width={width}\n        height={220}>\n        <AreaFill\n          axis={axis}\n          label=\"Area fill\"\n          width={width}\n          left={0}\n          height={200}\n          line={line}\n          data={data} />\n      </Base>\n    </div>\n  )\n};\n`;\n\nconst gradientFill = `<AreaFill\n  axis={axis}\n  label=\"Area fill\"\n  width={width}\n  left={0}\n  height={200}\n  line={{\n    ...line,\n    fill: {\n     fill: {\n       gradientTransform: 'rotate(90)',\n       stops: [\n         { offset: \"5%\", stopColor:  theme.brightBlue700 },\n         { offset: \"95%\", stopColor:  theme.brightBlue300, stopOpacity: 0 },\n       ],\n      },\n      show: true,\n    }\n  }}\n  data={data} />\n`;\n\nconst data = [\n  { x: 0, y: 0 },\n  { x: 10, y: 20 },\n  { x: 20, y: 10 },\n  { x: 30, y: 60 },\n];\nconst line: LineProps = {\n  curveType: curveCatmullRom,\n  fill: {\n    fill: theme.brightBlue800,\n    show: true,\n  },\n  show: true,\n  stroke: \"#000\",\n  strokeDashArray: \"0\",\n  strokeDashOffset: 0,\n};\n\nconst AreaFillExample = () => {\n  const [ref, width] = useWidth(\"90%\");\n  return (\n    <Layout>\n      <h2>Area Fill</h2>\n      <TwoColumns>\n        <div ref={ref}>\n          <Base width={width} height={220}>\n            <AreaFill\n              axis={axis}\n              label=\"Area fill\"\n              width={width}\n              left={0}\n              height={200}\n              line={line}\n              data={data}\n            />\n          </Base>\n\n          <h3>Gradients</h3>\n          <p>You can supply a gradient to the line fill props</p>\n          <Base width={width} height={220}>\n            <AreaFill\n              axis={axis}\n              label=\"Area fill\"\n              width={width}\n              left={0}\n              height={200}\n              line={{\n                ...line,\n                fill: {\n                  fill: {\n                    gradientTransform: \"rotate(90)\",\n                    stops: [\n                      { offset: \"5%\", stopColor: theme.brightBlue700 },\n                      {\n                        offset: \"95%\",\n                        stopColor: theme.brightBlue300,\n                        stopOpacity: 0,\n                      },\n                    ],\n                  },\n                  show: true,\n                },\n              }}\n              data={data}\n            />\n          </Base>\n          <JSXCode exampleCode={gradientFill} />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n    </Layout>\n  );\n};\n\nexport default AreaFillExample;\n"],"names":["Math","abs","atan2","cos","max","min","sin","sqrt","PI","point","that","x","y","_context","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","context","tension","this","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","lineTo","closePath","moveTo","custom","cardinal","CatmullRom","alpha","_alpha","_l01_a","_l12_a","_l23_a","_l01_2a","_l12_2a","_l23_2a","x23","y23","pow","x1","y1","x2","y2","a","n","b","m","catmullRom","TwoColumns","styled","div","data","line","curveType","curveCatmullRom","fill","theme","brightBlue800","show","stroke","strokeDashArray","strokeDashOffset","AreaFillExample","ref","width","useWidth","React","Layout","Base","height","AreaFill","axis","label","left","gradientTransform","stops","offset","stopColor","brightBlue700","brightBlue300","stopOpacity","JSXCode","exampleCode"],"sourceRoot":""}