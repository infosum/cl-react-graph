{"version":3,"file":"component---src-pages-map-tsx-21095f38b36d1257dc90.js","mappings":"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","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./node_modules/topojson-client/src/identity.js","webpack://docs2/./node_modules/topojson-client/src/feature.js","webpack://docs2/./node_modules/topojson-client/src/transform.js","webpack://docs2/./node_modules/topojson-client/src/reverse.js","webpack://docs2/./src/pages/map.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","export default function (x) {\n  return x;\n}","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\nexport default function (topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nfunction feature(topology, o) {\n  var id = o.id,\n    bbox = o.bbox,\n    properties = o.properties == null ? {} : o.properties,\n    geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n    arcs = topology.arcs;\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n  function point(p) {\n    return transformPoint(p);\n  }\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n  function geometry(o) {\n    var type = o.type,\n      coordinates;\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n      default:\n        return null;\n    }\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n  return geometry(o);\n}","import identity from \"./identity.js\";\nexport default function (transform) {\n  if (transform == null) return identity;\n  var x0,\n    y0,\n    kx = transform.scale[0],\n    ky = transform.scale[1],\n    dx = transform.translate[0],\n    dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n      n = input.length,\n      output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}","export default function (array, n) {\n  var t,\n    j = array.length,\n    i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}","import { interpolate } from \"d3\";\nimport React from \"react\";\nimport * as topo from \"topojson-client\";\n\nimport { Map, useWidth } from \"../../../src\";\nimport j from \"../assets/uk-region.topo.json\";\nimport { JSXCode } from \"../components/JSXCode\";\nimport { Layout } from \"../components/Layout\";\nimport { TwoColumns } from \"../components/TwoColumns\";\n\nconst exampleCode = `import {\n  Map,\n  useWidth,\n} from 'cl-react-graph;\nimport { interpolate } from 'd3';\nimport React from 'react';\nimport * as topo from 'topojson-client';\n\nimport json from '../assets/uk-region.topo.json';\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  const f = topo.feature(json as any, 'eer');\n  return(\n    <div ref={ref}>\n      <Map\n        geoJSON={f as any}\n        data={data}\n        colorInterpolate={interpolate(\"red\", \"blue\")}\n        bin=\"EER13NM\"\n        width={width}\n        height={400}\n      />\n    </div>\n  )\n};\n`;\n\nconst data = {\n  \"North East\": 3432,\n  \"North West\": 2322,\n  \"Yorkshire and The Humber\": 22,\n  \"East Midlands\": 986,\n  \"West Midlands\": 3454,\n  Eastern: 3432,\n  London: 999,\n  \"South East\": 2321,\n  \"South West\": 2234,\n};\n\nconst MapExample = () => {\n  const [ref, width] = useWidth(\"90%\");\n  const f = topo.feature(j as any, \"eer\");\n  return (\n    <Layout>\n      <h2>Map</h2>\n\n      <TwoColumns>\n        <div ref={ref}>\n          <Map\n            geoJSON={f as any}\n            data={data}\n            colorInterpolate={interpolate(\"red\", \"blue\")}\n            bin=\"EER13NM\"\n            width={width}\n            height={400}\n          />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n    </Layout>\n  );\n};\n\nexport default MapExample;\n"],"names":["TwoColumns","styled","div","x","topology","o","id","bbox","properties","geometry","transformPoint","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","i","j","n","length","output","Array","arcs","arc","points","pop","a","k","push","array","t","reverse","point","p","line","ring","polygon","map","coordinates","type","geometries","object","data","Eastern","London","MapExample","ref","width","useWidth","f","objects","features","React","Layout","Map","geoJSON","colorInterpolate","interpolate","bin","height","JSXCode","exampleCode"],"sourceRoot":""}