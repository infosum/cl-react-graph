{"version":3,"file":"component---src-pages-histogram-tsx-cc5774c90165e9bdd258.js","mappings":"+JAkGMA,EAAuB,CAC3BC,KAAM,CAAC,CAAC,EAAG,IAAK,CAAC,GAAI,KAAM,CAAC,IAAK,MACjCC,OAAQ,CACN,CACEF,KAAM,CAAC,IAAK,IAAM,MAClBG,MAAO,cAKPC,EAA2B,CAC/BC,KAAM,OACNC,QAAS,EACTC,eAAgB,OAChBC,OAAQ,OACRC,cAAe,EACfC,YAAa,EACbC,SAAS,GAGLC,EAAc,CAClBC,EAAG,CACDC,OAAQ,EACRC,MAAO,OAAF,UACAX,EADA,CAEHC,KAAM,OACNG,OAAQ,OACRC,cAAe,GACfC,YAAa,IAEfM,MAAO,EACPL,SAAS,GAEXM,EAAG,CACDF,MAAO,OAAF,UACAX,EADA,CAEHC,KAAM,OACNG,OAAQ,OACRC,cAAe,GACfC,YAAa,IAEfM,MAAO,EACPL,SAAS,IAoCb,UAhCyB,WACvB,OAAqBO,EAAAA,EAAAA,IAAS,OAAvBC,EAAP,KAAYC,EAAZ,KACA,OACE,gBAAC,IAAD,KACE,6CACA,gBAAC,IAAD,KACE,uBAAKD,IAAKA,GACR,gBAAC,KAAD,CACEE,UAAW,CACTC,SAAU,KAEZC,WAAY,EAAC,GAAM,GACnBC,eAAgB,YAAc,IAAXC,EAAW,EAAXA,KACjB,OAAO,qBAAGC,UAAU,qBAAoB,yBACtC,0BAAQC,GAAI,GAAIC,EAAG,EAAGvB,KAAK,QAC3B,wBAAMwB,GAAG,MAAMJ,EAAKK,eAGxBC,UAAWC,EAAAA,GAAAA,WACXhC,KAAMA,EACNc,OAAQ,IACRF,KAAMA,EACNqB,sBAAuBC,EAAAA,GAAAA,WACvBd,MAAOA,KAGX,gBAAC,IAAD,CAASe,YAvJG","sources":["webpack://docs2/./src/pages/histogram.tsx"],"sourcesContent":["import React, { createRef } from 'react';\nimport { Tooltip } from 'react-svg-tooltip';\n\nimport {\n  Chord,\n  EChartDirection,\n  ELabelOrientation,\n  Histogram,\n  useWidth,\n} from '../../../src';\nimport {\n  IGrid,\n  IHistogramData,\n} from '../../../src/Histogram';\nimport { ISVGLineStyle } from '../../../src/legacy/types';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\n\nconst exampleCode = `import {\n  Chord,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nconst lineStyle: ISVGLineStyle = {\n  fill: '#000',\n  opacity: 1,\n  shapeRendering: 'auto',\n  stroke: '#000',\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  visible: true,\n};\n\nconst grid: IGrid = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#bbb',\n      strokeOpacity: 0.7,\n      strokeWidth: 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#bbb',\n      strokeOpacity: 0.7,\n      strokeWidth: 5,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n\n  return (\n    <div ref={ref}>\n      <Histogram\n        animation={{\n          duration: 300,\n        }}\n        showLabels={[true, true]}\n        LabelComponent={({ item }) => {\n          return <g transform=\"translate(0, -10)\"><g>\n            <circle dy={10} r={4} fill=\"red\"></circle>\n            <text dx=\"10\">{item.percentage}</text></g>\n          </g>;\n        }}\n        direction={EChartDirection.HORIZONTAL}\n        data={data}\n        height={400}\n        grid={grid}\n        xAxisLabelOrientation={ELabelOrientation.HORIZONTAL}\n        width={width}\n      />\n    </div>\n  )\n}\n`;\n\nconst data: IHistogramData = {\n  bins: [[0, 50], [50, 150], [150, 300]],\n  counts: [\n    {\n      data: [500, 2000, 1500],\n      label: 'Baseline',\n    },\n  ]\n}\n\nconst lineStyle: ISVGLineStyle = {\n  fill: '#000',\n  opacity: 1,\n  shapeRendering: 'auto',\n  stroke: '#000',\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  visible: true,\n};\n\nconst grid: IGrid = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#bbb',\n      strokeOpacity: 0.7,\n      strokeWidth: 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      fill: 'none',\n      stroke: '#bbb',\n      strokeOpacity: 0.7,\n      strokeWidth: 5,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n\nconst HistogramExample = () => {\n  const [ref, width] = useWidth('90%');\n  return (\n    <Layout>\n      <h2>Histogram Chart</h2>\n      <TwoColumns>\n        <div ref={ref}>\n          <Histogram\n            animation={{\n              duration: 300,\n            }}\n            showLabels={[true, true]}\n            LabelComponent={({ item }) => {\n              return <g transform=\"translate(0, -10)\"><g>\n                <circle dy={10} r={4} fill=\"red\"></circle>\n                <text dx=\"10\">{item.percentage}</text></g>\n              </g>;\n            }}\n            direction={EChartDirection.HORIZONTAL}\n            data={data}\n            height={400}\n            grid={grid}\n            xAxisLabelOrientation={ELabelOrientation.HORIZONTAL}\n            width={width}\n          />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n    </Layout>\n  )\n}\n\nexport default HistogramExample;\n"],"names":["data","bins","counts","label","lineStyle","fill","opacity","shapeRendering","stroke","strokeOpacity","strokeWidth","visible","grid","x","height","style","ticks","y","useWidth","ref","width","animation","duration","showLabels","LabelComponent","item","transform","dy","r","dx","percentage","direction","EChartDirection","xAxisLabelOrientation","ELabelOrientation","exampleCode"],"sourceRoot":""}