{"version":3,"file":"component---src-pages-bar-chart-tsx-d99bbe033fbbf68e5dda.js","mappings":"mIAGO,MAAMA,E,KAAaC,QAAOC,IAAG,gEAAVD,CAAU,oG,gICgBpC,MAoGaE,EAA0B,CACrCC,EAAG,CACDC,MAAO,SACPC,aAAc,MACdC,iBAAkBC,EAAAA,GAAkBC,YAEtCC,EAAG,CACDJ,aAAc,MACdC,iBAAkBC,EAAAA,GAAkBC,aAIlCE,EAAqB,CACzBC,KAAM,CAAC,SAAU,OAAQ,SACzBC,OAAQ,CACN,CACEF,KAAM,CAAC,MAAO,MAAO,OACrBG,MAAO,YAET,CACEH,KAAM,CAAC,MAAO,MAAO,KACrBG,MAAO,cAKPC,EAA0B,CAC9BC,KAAM,OACNC,QAAS,EACTC,eAAgB,OAChBC,OAAQ,OACRC,cAAe,EACfC,YAAa,EACbC,QAAS,QAGLC,EAAkB,CACtBnB,EAAG,CACDoB,OAAQ,EACRC,MAAO,IACFV,EACHC,KAAM,OACNG,OAAQ,OACRC,cAAe,GACfC,YAAa,GAEfK,MAAO,EACPJ,SAAS,GAEXZ,EAAG,CACDe,MAAO,IACFV,EACHC,KAAM,OACNG,OAAQ,OACRC,cAAe,GACfC,YAAa,GAEfK,MAAO,EACPJ,SAAS,IA0Cb,UAtCwBK,KACtB,MAAOC,EAAKC,IAASC,EAAAA,EAAAA,IAAS,OAC9B,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,KAAAA,KAAI,aACJA,EAAAA,cAAC/B,EAAAA,EAAU,KACT+B,EAAAA,cAAAA,MAAAA,CAAKH,IAAKA,GACRG,EAAAA,cAACE,EAAAA,GAAQ,CACPC,UAAW,CACTC,SAAU,KAEZC,WAAY,EAAC,GAAO,GACpBC,UAAWC,EAAAA,GAAgB7B,WAC3BE,KAAMA,EACNa,OAAQ,IACRe,WAAY,CAAC,EAAG,IAAO,OACvBhB,KAAMA,EACNiB,YAAa,CAACC,EAAAA,EAAMC,cAAeD,EAAAA,EAAME,UACzCC,YAAaC,EAAAA,GAAkBC,QAC/BC,sBAAuBvC,EAAAA,GAAkBC,WACzCoB,MAAOA,EACPmB,QAAS,CACPC,QAAS,CACPC,aAAc,GACdC,aAAc,IAEhBC,cAAe,EACfF,aAAc,EACdC,aAAc,MAIpBpB,EAAAA,cAACsB,EAAAA,EAAO,CAACC,YAlMG,g5DAoMP,C","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/bar-chart.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import React from \"react\";\n\nimport {\n  Axes,\n  BarChart,\n  BarChartData,\n  DeepPartial,\n  EChartDirection,\n  EGroupedBarLayout,\n  ELabelOrientation,\n  GridProps,\n  SVGLineStyle,\n  useWidth,\n} from \"../../../src\";\nimport { JSXCode } from \"../components/JSXCode\";\nimport { Layout } from \"../components/Layout\";\nimport { TwoColumns } from \"../components/TwoColumns\";\nimport { theme } from \"../context/theme\";\n\nconst exampleCode = `import {\n  BarChart,\n  DeepPartial,\n  EChartDirection,\n  EGroupedBarLayout,\n  ELabelOrientation,\n  Axes,\n  BarChartData,\n  GridProps,\n  SVGLineStyle,\n  useWidth,\n} from 'cl-react-graph;\n\n\nexport const axis: DeepPartial<Axes> = {\n  x: {\n    scale: 'linear',\n    numberFormat: '.2s',\n    labelOrientation: ELabelOrientation.HORIZONTAL,\n  },\n  y: {\n    numberFormat: '.2s',\n    labelOrientation: ELabelOrientation.HORIZONTAL,\n  },\n};\n\nconst data: BarChartData = {\n  bins: ['Female', 'Male', 'Other'],\n  counts: [\n    {\n      data: [58483, 52400, 13300],\n      label: 'Baseline',\n    },\n    {\n      data: [54932, 34230, 10000],\n      label: 'Filtered',\n    },\n  ]\n};\n\nexport const lineStyle: SVGLineStyle = {\n  'fill': '#000',\n  'opacity': 1,\n  'shapeRendering': 'auto',\n  'stroke': '#000',\n  'strokeOpacity': 1,\n  'strokeWidth': 1,\n  'visible': 'true',\n};\n\nconst grid: GridProps = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'strokeOpacity': 0.7,\n      'strokeWidth': 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      'fill': 'none',\n      'stroke': '#bbb',\n      'strokeOpacity': 0.7,\n      'strokeWidth': 5,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n\n  return (\n    <div ref={ref}>\n      <BarChart\n        animation={{\n          duration: 800,\n        }}\n        showLabels={[false, true]}\n        direction={EChartDirection.HORIZONTAL}\n        data={data}\n        height={400}\n        tickValues={[0, 40000, 89200]}\n        grid={grid}\n        colorScheme={[theme.brightBlue800, theme.green900]}\n        groupLayout={EGroupedBarLayout.GROUPED}\n        xAxisLabelOrientation={ELabelOrientation.HORIZONTAL}\n        width={width} />\n    </div>\n  )\n};\n`;\n\nexport const axis: DeepPartial<Axes> = {\n  x: {\n    scale: \"linear\",\n    numberFormat: \".2s\",\n    labelOrientation: ELabelOrientation.HORIZONTAL,\n  },\n  y: {\n    numberFormat: \".2s\",\n    labelOrientation: ELabelOrientation.HORIZONTAL,\n  },\n};\n\nconst data: BarChartData = {\n  bins: [\"Female\", \"Male\", \"Other\"],\n  counts: [\n    {\n      data: [58483, 52400, 13300],\n      label: \"Baseline\",\n    },\n    {\n      data: [54932, 34230, 10000],\n      label: \"Filtered\",\n    },\n  ],\n};\n\nconst lineStyle: SVGLineStyle = {\n  fill: \"#000\",\n  opacity: 1,\n  shapeRendering: \"auto\",\n  stroke: \"#000\",\n  strokeOpacity: 1,\n  strokeWidth: 1,\n  visible: \"true\",\n};\n\nconst grid: GridProps = {\n  x: {\n    height: 1,\n    style: {\n      ...lineStyle,\n      fill: \"none\",\n      stroke: \"#bbb\",\n      strokeOpacity: 0.7,\n      strokeWidth: 1,\n    },\n    ticks: 5,\n    visible: true,\n  },\n  y: {\n    style: {\n      ...lineStyle,\n      fill: \"none\",\n      stroke: \"#bbb\",\n      strokeOpacity: 0.7,\n      strokeWidth: 5,\n    },\n    ticks: 5,\n    visible: true,\n  },\n};\n\nconst BarChartExample = () => {\n  const [ref, width] = useWidth(\"90%\");\n  return (\n    <Layout>\n      <h2>Bar Chart</h2>\n      <TwoColumns>\n        <div ref={ref}>\n          <BarChart\n            animation={{\n              duration: 800,\n            }}\n            showLabels={[false, true]}\n            direction={EChartDirection.HORIZONTAL}\n            data={data}\n            height={400}\n            tickValues={[0, 40000, 89200]}\n            grid={grid}\n            colorScheme={[theme.brightBlue800, theme.green900]}\n            groupLayout={EGroupedBarLayout.GROUPED}\n            xAxisLabelOrientation={ELabelOrientation.HORIZONTAL}\n            width={width}\n            padding={{\n              grouped: {\n                paddingInner: 0.2,\n                paddingOuter: 0.2,\n              },\n              overlayMargin: 0,\n              paddingInner: 0,\n              paddingOuter: 1,\n            }}\n          />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n    </Layout>\n  );\n};\n\nexport default BarChartExample;\n"],"names":["TwoColumns","styled","div","axis","x","scale","numberFormat","labelOrientation","ELabelOrientation","HORIZONTAL","y","data","bins","counts","label","lineStyle","fill","opacity","shapeRendering","stroke","strokeOpacity","strokeWidth","visible","grid","height","style","ticks","BarChartExample","ref","width","useWidth","React","Layout","BarChart","animation","duration","showLabels","direction","EChartDirection","tickValues","colorScheme","theme","brightBlue800","green900","groupLayout","EGroupedBarLayout","GROUPED","xAxisLabelOrientation","padding","grouped","paddingInner","paddingOuter","overlayMargin","JSXCode","exampleCode"],"sourceRoot":""}