{"version":3,"file":"component---src-pages-getting-started-tsx-7633855eb625ad2cc626.js","mappings":"2JAOA,MAAMA,EAAYC,EAAAA,QAAOC,EAAC,YAAAC,YAAAA,6BAAAC,YAAAA,eAARH,CAAQ,kBA4CpBI,EAAO,CACXC,KAAM,CACJ,QACA,QACA,yBACA,QACA,QACA,QACA,SAEFC,OAAQ,CACN,CACEF,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBG,MAAO,WAsCb,UAjCaC,KACX,MAAOC,EAAKC,IAASC,EAAAA,EAAAA,IAAS,OAC9B,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,KAAAA,KAAI,qBACJA,EAAAA,cAAAA,KAAAA,KAAI,gBACJA,EAAAA,cAACb,EAAS,KAAC,6CACXa,EAAAA,cAACE,EAAAA,EAAO,CAACC,YAjEE,4BAmEXH,EAAAA,cAAAA,KAAAA,KAAI,4BACJA,EAAAA,cAACb,EAAS,KAAC,0GAIXa,EAAAA,cAACE,EAAAA,EAAO,CAACC,YAvEI,4EAyEbH,EAAAA,cAACb,EAAS,KAAC,yIAIXa,EAAAA,cAACE,EAAAA,EAAO,CAACC,YAvEE,oQAyEXH,EAAAA,cAACb,EAAS,KAAC,oDACXa,EAAAA,cAACE,EAAAA,EAAO,CAACC,YAxDG,gRA0DZH,EAAAA,cAAAA,KAAAA,KAAI,uBACJA,EAAAA,cAAAA,MAAAA,CAAKH,IAAKA,EAAKO,MAAO,CAAEN,MAAO,UAC7BE,EAAAA,cAACK,EAAAA,GAAQ,CAACP,MAAOA,EAAOQ,OAAQ,IAAKd,KAAMA,KAEtC,C","sources":["webpack://docs2/./src/pages/getting-started.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PieChart, useWidth } from \"../../../src\";\nimport { JSXCode } from \"../components/JSXCode\";\nimport { Layout } from \"../components/Layout\";\n\nconst Paragraph = styled.p`\n  width: 36rem;\n`;\n\nconst npmICode = `npm i -S cl-react-graph`;\nconst importCode = `\n  import {\n    PieChart,\n    useWidth,\n  } from 'cl-react-graph;\n`;\nconst dataCode = `\n  const data = {\n    bins: [\n      'bin 1',\n      'bin 2',\n      'bin 3 with a long name',\n      'bin 4',\n      'bin 5',\n      'bin 6',\n      'bin 7'\n    ],\n    counts: [\n      {\n        data: [1, 2, 3, 4, 5, 6, 7],\n      },\n    ],\n  };\n`;\nconst chartCode = `\n  const MyComponent = () => {\n    const [ref, width] = useWidth('90%');\n    return(\n      <div ref={ref} style={{width: '400px'}}>\n        <PieChart\n          width={width}\n          height={400}\n          data={data}\n        />\n      </div>\n    )\n  };\n`;\n\nconst data = {\n  bins: [\n    \"bin 1\",\n    \"bin 2\",\n    \"bin 3 with a long name\",\n    \"bin 4\",\n    \"bin 5\",\n    \"bin 6\",\n    \"bin 7\",\n  ],\n  counts: [\n    {\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: \"Set 1\",\n    },\n  ],\n};\n\nconst Home = () => {\n  const [ref, width] = useWidth(\"90%\");\n  return (\n    <Layout>\n      <h1>Quick start guide</h1>\n      <h3>Installation</h3>\n      <Paragraph>Install cl-react-graph using NPM or Yarn.</Paragraph>\n      <JSXCode exampleCode={npmICode} />\n\n      <h3>Creating our first graph</h3>\n      <Paragraph>\n        You are going to use a pie chart for our example lets import that and\n        useWidth to handle the resizing.\n      </Paragraph>\n      <JSXCode exampleCode={importCode} />\n\n      <Paragraph>\n        Now You need some data here is an example for you to get started, for\n        more options take a deeper dive into the chart you want to use.\n      </Paragraph>\n      <JSXCode exampleCode={dataCode} />\n\n      <Paragraph>Then use the chart like so passing in your data:</Paragraph>\n      <JSXCode exampleCode={chartCode} />\n\n      <h3>Resulting pie chart</h3>\n      <div ref={ref} style={{ width: \"400px\" }}>\n        <PieChart width={width} height={400} data={data} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default Home;\n"],"names":["Paragraph","styled","p","displayName","componentId","data","bins","counts","label","Home","ref","width","useWidth","React","Layout","JSXCode","exampleCode","style","PieChart","height"],"sourceRoot":""}