{"version":3,"file":"component---src-pages-upset-tsx-140145280102b244ceba.js","mappings":"wKAqDMA,EAAiC,CACrC,CAAEC,KAAM,CAAC,SAAUC,MAAO,IAC1B,CAAED,KAAM,CAAC,QAAS,QAASC,MAAO,IAClC,CAAED,KAAM,CAAC,QAAS,OAAQ,YAAaC,MAAO,GAC9C,CAAED,KAAM,CAAC,QAASC,MAAO,IACzB,CAAED,KAAM,CAAC,QAAS,YAAaC,MAAO,IACtC,CAAED,KAAM,CAAC,YAAaC,MAAO,KAoC/B,UAjC0B,WACxB,OAAqBC,EAAAA,EAAAA,IAAS,OAAvBC,EAAP,KAAYC,EAAZ,KACA,OACE,gBAAC,IAAD,KACE,yCAEA,gBAAC,IAAD,KACE,uBAAKD,IAAKA,GACR,gBAAC,KAAD,CACEE,MAAM,sBACNC,YAAY,8BACZF,MAAOA,EACPG,OAAQ,IACRC,aAAc,CACZC,YAAa,CAACC,EAAAA,EAAAA,UACdC,KAAM,CACJC,OAAQF,EAAAA,EAAAA,OACRG,SAAUH,EAAAA,EAAAA,UAGdI,QAAS,CACPC,WAAY,CAAEC,WAAYZ,EAAQ,EAAGa,UAAW,IAAKV,OAAQ,KAC7DE,YAAa,CAAC,uBAEhBV,KAAMA,KAEV,gBAAC,IAAD,CAASmB,YA5EG","sources":["webpack://docs2/./src/pages/upset.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  IUpsetChartProps,\n  UpsetChart,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\nimport { theme } from '../context/theme';\n\nconst exampleCode = `import {\n  IUpsetChartProps,\n  UpsetChart,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data: IUpsetChartProps['data'] = [\n  { keys: ['Email'], value: 10 },\n  { keys: ['Email', 'MAID'], value: 14 },\n  { keys: ['Email', 'MAID', 'Postcode'], value: 1 },\n  { keys: ['MAID'], value: 10 },\n  { keys: ['Email', 'Postcode'], value: 14 },\n  { keys: ['Postcode'], value: 12 },\n];\n\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n    <UpsetChart\n    title=\"example upset chart\"\n    description=\"more info for accessibility\"\n    width={width}\n    height={400}\n    distribution={{\n      colorScheme: ['hsla(140, 60%, 88%, 1)],\n      fill: {\n        active: 'hsla(6, 90%, 70%, 1)',\n        inactive: 'hsla(208, 32%, 91%, 1)',\n      },\n    }}\n    setSize={{\n      dimensions: { chartWidth: width / 6, axisWidth: 120, height: 150 },\n      colorScheme: ['rgb(154, 218, 172)'],\n    }}\n    data={data} />\n    </div>\n  )\n}\n`;\nconst data: IUpsetChartProps['data'] = [\n  { keys: ['Email'], value: 10 },\n  { keys: ['Email', 'MAID'], value: 14 },\n  { keys: ['Email', 'MAID', 'Postcode'], value: 1 },\n  { keys: ['MAID'], value: 10 },\n  { keys: ['Email', 'Postcode'], value: 14 },\n  { keys: ['Postcode'], value: 12 },\n];\n\nconst UpsetChartExample = () => {\n  const [ref, width] = useWidth('90%');\n  return (\n    <Layout>\n      <h2>Upset Chart</h2>\n\n      <TwoColumns>\n        <div ref={ref}>\n          <UpsetChart\n            title=\"example upset chart\"\n            description=\"more info for accessibility\"\n            width={width}\n            height={400}\n            distribution={{\n              colorScheme: [theme.green900],\n              fill: {\n                active: theme.red700,\n                inactive: theme.grey600,\n              },\n            }}\n            setSize={{\n              dimensions: { chartWidth: width / 6, axisWidth: 120, height: 150 },\n              colorScheme: ['rgb(154, 218, 172)'],\n            }}\n            data={data} />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n\n      </TwoColumns>\n    </Layout>\n  )\n}\n\nexport default UpsetChartExample;\n"],"names":["data","keys","value","useWidth","ref","width","title","description","height","distribution","colorScheme","theme","fill","active","inactive","setSize","dimensions","chartWidth","axisWidth","exampleCode"],"sourceRoot":""}