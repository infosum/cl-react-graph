{"version":3,"file":"component---src-pages-pie-tsx-28e63cce400fc13dd95f.js","mappings":"mIAGO,MAAMA,E,KAAaC,QAAOC,IAAG,gEAAVD,CAAU,oG,6FCKpC,MAsCME,EAAO,CACXC,KAAM,CACJ,QACA,QACA,yBACA,QACA,QACA,QACA,SAEFC,OAAQ,CACN,CACEF,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBG,MAAO,SAET,CACEH,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAC5BG,MAAO,WAiCb,UA5BwBC,KACtB,MAAOC,EAAKC,IAASC,EAAAA,EAAAA,IAAS,OAC9B,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,KAAAA,KAAI,aAEJA,EAAAA,cAACX,EAAAA,EAAU,KACTW,EAAAA,cAACE,EAAAA,GAAM,CACLV,KAAMA,EACNW,MAAOC,EAAAA,EACPC,SAAUA,IAAMC,QAAQC,IAAI,UAC5BC,QAAS,CAAC,IAEZR,EAAAA,cAAAA,MAAAA,CAAKH,IAAKA,GACRG,EAAAA,cAACS,EAAAA,GAAQ,CACPX,MAAO,IACPY,OAAQ,IACRC,WAAY,GACZnB,KAAMA,EACNoB,YAAcC,GAASA,EAAKC,WAAa,OAG7Cd,EAAAA,cAACe,EAAAA,EAAO,CAACC,YAlFG,4iBAoFP,C","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/pie.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import { schemeSet3 } from \"d3-scale-chromatic\";\nimport React from \"react\";\n\nimport { Legend, PieChart, useWidth } from \"../../../src\";\nimport { JSXCode } from \"../components/JSXCode\";\nimport { Layout } from \"../components/Layout\";\nimport { TwoColumns } from \"../components/TwoColumns\";\n\nconst exampleCode = `import {\n  PieChart,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data = {\n  bins: [\n    'bin 1',\n    'bin 2',\n    'bin 3 with a long name',\n    'bin 4',\n    'bin 5',\n    'bin 6',\n    'bin 7'\n  ],\n  counts: [\n    {\n      data: [1, 2, 3, 4, 5, 6, 7],\n    },\n  ],\n};\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n      <PieChart\n        width={400}\n        height={400}\n        labels={{\n          display: true,\n        }}\n        data={data} />\n    </div>\n  )\n};\n`;\n\nconst data = {\n  bins: [\n    \"bin 1\",\n    \"bin 2\",\n    \"bin 3 with a long name\",\n    \"bin 4\",\n    \"bin 5\",\n    \"bin 6\",\n    \"bin 7\",\n  ],\n  counts: [\n    {\n      data: [1, 2, 3, 4, 5, 6, 7],\n      label: \"Set 1\",\n    },\n    {\n      data: [4, 32, 23, 14, 2, 1, 22],\n      label: \"Set 2\",\n    },\n  ],\n};\n\nconst PieChartExample = () => {\n  const [ref, width] = useWidth(\"90%\");\n  return (\n    <Layout>\n      <h2>Pie Chart</h2>\n\n      <TwoColumns>\n        <Legend\n          data={data}\n          theme={schemeSet3 as string[]}\n          onSelect={() => console.log(\"select\")}\n          visible={{}}\n        />\n        <div ref={ref}>\n          <PieChart\n            width={400}\n            height={400}\n            donutWidth={30}\n            data={data}\n            labelFormat={(item) => item.percentage + \"%\"}\n          />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n    </Layout>\n  );\n};\n\nexport default PieChartExample;\n"],"names":["TwoColumns","styled","div","data","bins","counts","label","PieChartExample","ref","width","useWidth","React","Layout","Legend","theme","schemeSet3","onSelect","console","log","visible","PieChart","height","donutWidth","labelFormat","item","percentage","JSXCode","exampleCode"],"sourceRoot":""}