{"version":3,"file":"component---src-pages-scatter-tsx-a9b0022a0f34d4a22f44.js","mappings":"kIAGO,MAAMA,E,KAAaC,QAAOC,IAAG,gEAAVD,CAAU,oG,mFCWpC,MAuFME,EAA4C,CAChDC,MAAO,eACPC,MAAO,CAAEC,KAAM,OAAQC,OAAQ,EAAGC,MAAM,EAAMC,OAAQ,IACtDN,KAAM,CACJ,CAAEO,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,IACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,IACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACjB,CAAEF,EAAG,EAAGC,EAAG,EAAGC,EAAG,MAGfC,EAAQC,IAAA,IAAC,EACbJ,EAAC,EACDC,EAAC,EACDC,EAAC,GACDG,EAAE,GACFC,EAAE,SACFC,GACmB,SAAKC,EAAAA,cAAAA,OAAAA,CAAMR,EAAGK,EAAIJ,EAAGK,EAAIG,SAAqB,GAAVP,QAAAA,EAAK,KACxDF,QAAAA,EAAK,GAAK,EAAI,KAAO,KACtBO,EACI,EA+CT,UA5CqBG,KACnB,MAAOC,EAAKC,IAASC,EAAAA,EAAAA,IAAS,OACxBC,EAAa,CACjBd,EAAG,CACDe,OAAQ,GACRH,MAAOA,EACPI,MAAO,UAETf,EAAG,CACDW,MAAO,GACPG,OAAQH,EACRI,MAAO,WAGX,OACER,EAAAA,cAACS,EAAAA,EAAM,KACLT,EAAAA,cAAAA,KAAAA,KAAI,iBACJA,EAAAA,cAAClB,EAAAA,EAAU,KACTkB,EAAAA,cAAAA,MAAAA,CAAKG,IAAKA,GACRH,EAAAA,cAACU,EAAAA,GAAW,CACVJ,KAAMA,EACNC,OAAQ,IACRH,MAAOA,EACPnB,KAAM,CAACA,MAGXe,EAAAA,cAACW,EAAAA,EAAO,CAACC,YA3IG,ksBA6IdZ,EAAAA,cAAClB,EAAAA,EAAU,KACTkB,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,iCACJA,EAAAA,cAACU,EAAAA,GAAW,CACVJ,KAAMA,EACNO,eAAiBC,GAAsBd,EAAAA,cAACL,EAAUmB,GAClDP,OAAQ,IACRH,MAAOA,EACPnB,KAAM,CAACA,MAEXe,EAAAA,cAACW,EAAAA,EAAO,CAACC,YAjHS,s9BAmHb,C","sources":["webpack://docs2/./src/components/TwoColumns.tsx","webpack://docs2/./src/pages/scatter.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport const TwoColumns = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  @media (max-width: 640px){ \n    grid-template-columns: 1fr;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Axes,\n  ChartPointValue,\n  PointProps,\n  ScatterPlot,\n  ScatterPlotDataSet,\n  useWidth,\n} from '../../../src';\nimport { JSXCode } from '../components/JSXCode';\nimport { Layout } from '../components/Layout';\nimport { TwoColumns } from '../components/TwoColumns';\n\nconst exampleCode = `import {\n  Axes,\n  ChartPointValue,\n  ScatterPlotDataSet,\n  ScatterPlot,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data: ScatterPlotDataSet<ChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\n\nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n    <ScatterPlot\n      axis={axis}\n      height={400}\n      width={400}\n      data={[data]}\n    />\n    </div>\n  )\n}\n`;\n\n\nconst exampleCodeCustom = `import {\n  Axes,\n  ChartPointValue,\n  PointProps,\n  ScatterPlotDataSet,\n  ScatterPlot,\n  useWidth,\n} from 'cl-react-graph;\n\nconst data: ScatterPlotDataSet<ChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\n\nconst Fruit = ({\n  x,\n  y,\n  z,\n  cx,\n  cy,\n  children,\n}: PointProps<number>) => <text x={cx} y={cy} fontSize={z * 4}>\n    {(x ?? 0) > 2 ? \"üçé\" : \"üçê\"}\n    {children}\n  </text>\n  \nconst MyComponent = () => {\n  const [ref, width] = useWidth('90%');\n  return(\n    <div ref={ref}>\n    <ScatterPlot\n      PointComponent={(props: PointProps) => <Fruit {...props} />}\n      axis={axis}\n      height={400}\n      width={400}\n      data={[data]} />\n    </div>\n  )\n};\n`;\nconst data: ScatterPlotDataSet<ChartPointValue> = {\n  label: 'Scatter data',\n  point: { fill: '#000', radius: 4, show: true, stroke: '' },\n  data: [\n    { x: 0, y: 1, z: 5 },\n    { x: 2, y: 1, z: 5 },\n    { x: 3, y: 3, z: 10 },\n    { x: 4, y: 4, z: 5 },\n    { x: 5, y: 1, z: 15 },\n    { x: 6, y: 6, z: 5 },\n    { x: 7, y: 7, z: 15 },\n  ]\n}\nconst Fruit = ({\n  x,\n  y,\n  z,\n  cx,\n  cy,\n  children,\n}: PointProps<number>) => <text x={cx} y={cy} fontSize={(z ?? 1) * 4}>\n    {(x ?? 0) > 2 ? \"üçé\" : \"üçê\"}\n    {children}\n  </text>\n\n\nconst RadarExample = () => {\n  const [ref, width] = useWidth('90%');\n  const axis: Axes = {\n    x: {\n      height: 20,\n      width: width,\n      scale: 'linear',\n    },\n    y: {\n      width: 20,\n      height: width,\n      scale: 'linear',\n    },\n  }\n  return (\n    <Layout>\n      <h2>Scatter Chart</h2>\n      <TwoColumns>\n        <div ref={ref}>\n          <ScatterPlot\n            axis={axis}\n            height={400}\n            width={width}\n            data={[data]}\n          />\n        </div>\n        <JSXCode exampleCode={exampleCode} />\n      </TwoColumns>\n      <TwoColumns>\n        <div>\n          <h3>With a custom point component</h3>\n          <ScatterPlot\n            axis={axis}\n            PointComponent={(props: PointProps) => <Fruit {...props} />}\n            height={400}\n            width={width}\n            data={[data]} />\n          </div>\n        <JSXCode exampleCode={exampleCodeCustom} />\n      </TwoColumns>\n    </Layout>\n  )\n};\n\nexport default RadarExample;\n"],"names":["TwoColumns","styled","div","data","label","point","fill","radius","show","stroke","x","y","z","Fruit","_ref","cx","cy","children","React","fontSize","RadarExample","ref","width","useWidth","axis","height","scale","Layout","ScatterPlot","JSXCode","exampleCode","PointComponent","props"],"sourceRoot":""}